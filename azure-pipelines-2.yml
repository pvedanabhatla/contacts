# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '02eee56c-8b3f-4f59-926a-3c89e4cbb6ae'
  imageBackendRepository: 'contacts-backend'
  imageFrontendRepository: 'contacts-frontend'
  containerRegistry: 'contactsacr.azurecr.io'
  dockerfilePath: './contacts-backend/Dockerfile'
  dockerFrontendfilePath: './contacts-frontend/Dockerfile'

  tag: '$(Build.BuildId)'
  imagePullSecret: 'contactsacr33b5-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    
    - task: Maven@3
      inputs:
        mavenPomFile: 'contacts-backend/pom.xml'
        goals: 'clean verify'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: Docker@2
      displayName: Build and push Backend image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageBackendRepository)
        dockerfile: $(dockerfilePath)
        buildContext: ./contacts-backend
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
 
    - task: Docker@2
      displayName: Build and push Front end image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageFrontendRepository)
        dockerfile: $(dockerFrontendfilePath)
        buildContext: ./contacts-frontend
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

